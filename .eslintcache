[{"C:\\Users\\ezray\\OneDrive\\Documents\\JCWM\\Font_End\\ujian-frontend-1504\\src\\index.js":"1","C:\\Users\\ezray\\OneDrive\\Documents\\JCWM\\Font_End\\ujian-frontend-1504\\src\\app.js":"2","C:\\Users\\ezray\\OneDrive\\Documents\\JCWM\\Font_End\\ujian-frontend-1504\\src\\reducer\\index.js":"3","C:\\Users\\ezray\\OneDrive\\Documents\\JCWM\\Font_End\\ujian-frontend-1504\\src\\reducer\\user_reducer.js":"4","C:\\Users\\ezray\\OneDrive\\Documents\\JCWM\\Font_End\\ujian-frontend-1504\\src\\pages\\home.js":"5","C:\\Users\\ezray\\OneDrive\\Documents\\JCWM\\Font_End\\ujian-frontend-1504\\src\\pages\\login.js":"6","C:\\Users\\ezray\\OneDrive\\Documents\\JCWM\\Font_End\\ujian-frontend-1504\\src\\action\\index.js":"7","C:\\Users\\ezray\\OneDrive\\Documents\\JCWM\\Font_End\\ujian-frontend-1504\\src\\action\\user_action.js":"8","C:\\Users\\ezray\\OneDrive\\Documents\\JCWM\\Font_End\\ujian-frontend-1504\\src\\components\\navigation.js":"9","C:\\Users\\ezray\\OneDrive\\Documents\\JCWM\\Font_End\\ujian-frontend-1504\\src\\components\\products.js":"10","C:\\Users\\ezray\\OneDrive\\Documents\\JCWM\\Font_End\\ujian-frontend-1504\\src\\pages\\detail_product.js":"11","C:\\Users\\ezray\\OneDrive\\Documents\\JCWM\\Font_End\\ujian-frontend-1504\\src\\pages\\cart.js":"12","C:\\Users\\ezray\\OneDrive\\Documents\\JCWM\\Font_End\\ujian-frontend-1504\\src\\action\\history_action.js":"13","C:\\Users\\ezray\\OneDrive\\Documents\\JCWM\\Font_End\\ujian-frontend-1504\\src\\reducer\\history_reducer.js":"14","C:\\Users\\ezray\\OneDrive\\Documents\\JCWM\\Font_End\\ujian-frontend-1504\\src\\pages\\history.js":"15"},{"size":612,"mtime":1608088405351,"results":"16","hashOfConfig":"17"},{"size":1722,"mtime":1608110116359,"results":"18","hashOfConfig":"17"},{"size":261,"mtime":1608107647664,"results":"19","hashOfConfig":"17"},{"size":541,"mtime":1608087944111,"results":"20","hashOfConfig":"17"},{"size":257,"mtime":1608099496951,"results":"21","hashOfConfig":"17"},{"size":7399,"mtime":1608102838770,"results":"22","hashOfConfig":"17"},{"size":63,"mtime":1608107553153,"results":"23","hashOfConfig":"17"},{"size":186,"mtime":1608087567791,"results":"24","hashOfConfig":"17"},{"size":2233,"mtime":1608111061594,"results":"25","hashOfConfig":"17"},{"size":2232,"mtime":1608105442484,"results":"26","hashOfConfig":"17"},{"size":7424,"mtime":1608109388530,"results":"27","hashOfConfig":"17"},{"size":12911,"mtime":1608108925956,"results":"28","hashOfConfig":"17"},{"size":114,"mtime":1608107510206,"results":"29","hashOfConfig":"17"},{"size":200,"mtime":1608107607212,"results":"30","hashOfConfig":"17"},{"size":3482,"mtime":1608109762943,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qynvzm",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ezray\\OneDrive\\Documents\\JCWM\\Font_End\\ujian-frontend-1504\\src\\index.js",[],"C:\\Users\\ezray\\OneDrive\\Documents\\JCWM\\Font_End\\ujian-frontend-1504\\src\\app.js",[],"C:\\Users\\ezray\\OneDrive\\Documents\\JCWM\\Font_End\\ujian-frontend-1504\\src\\reducer\\index.js",[],["67","68"],"C:\\Users\\ezray\\OneDrive\\Documents\\JCWM\\Font_End\\ujian-frontend-1504\\src\\reducer\\user_reducer.js",[],"C:\\Users\\ezray\\OneDrive\\Documents\\JCWM\\Font_End\\ujian-frontend-1504\\src\\pages\\home.js",[],"C:\\Users\\ezray\\OneDrive\\Documents\\JCWM\\Font_End\\ujian-frontend-1504\\src\\pages\\login.js",["69","70","71","72"],"import React from 'react'\r\nimport Axios from 'axios'\r\n\r\nimport {\r\n    InputGroup,\r\n    FormControl,\r\n    Button,\r\n    Form,\r\n    Modal\r\n} from 'react-bootstrap'\r\n\r\nimport {connect} from 'react-redux'\r\nimport {Redirect, Link} from 'react-router-dom'\r\nimport {login} from '../action'\r\n\r\nconst url = 'http://localhost:2000/users'\r\n\r\nclass Login extends React.Component {\r\n        constructor(props) {\r\n            super(props)\r\n            this.state = {\r\n                eyePassA: false,\r\n                eyePassB: false,\r\n                emailFailed: [false, \"\"],\r\n                passFailed: [false, \"\"],\r\n                registerFailed: [false, \"\"]\r\n            }\r\n        }\r\n        handleRegister = () => {\r\n            const {emailFailed, passFailed} = this.state\r\n            let email = this.refs.email.value\r\n            let password = this.refs.pass.value\r\n    \r\n            if (!email || !password) return this.setState({registerFailed: [true, \"Please input each form\"]})\r\n            \r\n                Axios.get(`${url}?email=${email}`)\r\n                .then((res) => {\r\n                    console.log(res.data)\r\n                    if (res.data.length !== 0) return this.setState({registerFailed: [true, \"an account has already used this email\"]})\r\n                    \r\n                    Axios.post('http://localhost:2000/users', {\r\n                        password: password,\r\n                        email: email,\r\n                        cart: []\r\n                    })\r\n                        .then((res) => {\r\n                            console.log(res.data)\r\n                            console.log('Register berhasil')\r\n                            this.setState({registerFailed: [false, \"\"]})\r\n                            localStorage.id = res.data.id;\r\n                            this.props.login(res.data)\r\n                        })\r\n                        .catch((err) => console.log(err))\r\n                })\r\n                .catch((err) => console.log(err))\r\n        }\r\n    \r\n        emailCheck = (para) => {\r\n            let email = para.target.value\r\n            console.log(email)\r\n            let check = /^(([^<>()\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        \r\n            if (!check.test(email)) return this.setState({emailFailed: [true, \"email is not valid\"]})\r\n            this.setState({emailFailed:[false, \"\"]})\r\n        }\r\n    \r\n        passCheck = (para) => {\r\n            let pass = para.target.value\r\n            let symb = /[!@#$%^&*():;\"'<>?,.|{[}]/\r\n            let numb = /[0-9]/\r\n    \r\n            if (!symb.test(pass) || !numb.test(pass) || pass.length < 6) return this.setState({ passFailed: [true, \"*Must include symbol, number, min 6 char\"] })\r\n            this.setState({passFailed: [false, \"\"]})\r\n        }\r\n    \r\n        render() {\r\n            const {eyePassA, eyePassB, emailFailed, passFailed, registerFailed} = this.state\r\n    \r\n            if (this.props.email) return <Redirect to = '/'/>\r\n            return  (\r\n                <div style={styles.container}>\r\n                    <div style= {styles.center}>\r\n                        <div>\r\n                            <h1>Register</h1>\r\n                        </div>\r\n                        <div style= {{...styles.item, textAlign:\"center\"}}>\r\n                            <InputGroup>\r\n                                <InputGroup.Prepend>\r\n                                    <InputGroup.Text id=\"basic-addon1\" style={{ width: \"45px\", display: 'flex', justifyContent: 'center' }}>\r\n                                        <i className=\"fas fa-envelope\" />\r\n                                    </InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl\r\n                                    placeholder=\"Email\"\r\n                                    aria-label=\"Email\"\r\n                                    aria-describedby=\"basic-addon1\"\r\n                                    style={{ height: \"45px\" }}\r\n                                    ref=\"email\"\r\n                                    onChange={(para) => this.emailCheck(para)}\r\n                                />\r\n                            </InputGroup>\r\n                            <Form.Text className=\"mb-3\" style={{ textAlign: \"left\", color: \"red\", fontSize: '10px' }}>\r\n                                {emailFailed[1]}\r\n                            </Form.Text>\r\n                            <InputGroup className=\"mb-3\">\r\n                                <InputGroup.Prepend style={{ cursor: 'pointer' }}\r\n                                    onClick={() => this.setState({eyePassA : !eyePassA})}>\r\n                                    <InputGroup.Text id=\"basic-addon1\" style={{ width: \"45px\", display: 'flex', justifyContent: 'center' }}>\r\n                                        <i className={eyePassA ? \"fas fa-eye\" : \"fas fa-eye-slash\"}></i>\r\n                                    </InputGroup.Text>\r\n                                </InputGroup.Prepend>\r\n                                <FormControl\r\n                                    placeholder=\"Password\"\r\n                                    aria-label=\"Password\"\r\n                                    aria-describedby=\"basic-addon1\"\r\n                                    style={{ height: \"45px\" }}\r\n                                    type={eyePassA ? \"text\" : \"password\"}\r\n                                    ref=\"pass\"\r\n                                    onChange={(para) => this.passCheck(para)}\r\n                                />\r\n                            </InputGroup>\r\n                            <Form.Text className=\"mb-3\" style={{ textAlign: \"left\", color: \"red\", fontSize: '10px' }}>\r\n                                {passFailed[1]}\r\n                            </Form.Text>\r\n                            <Button onClick={this.handleRegister}>\r\n                                Log include <i className=\"fas fa-user-plus\" style={{ marginLeft: '15px' }}></i>\r\n                            </Button>\r\n                        </div>\r\n                        <Modal show={registerFailed[0]} onHide={() => this.setState({ registerFailed: [false, \"\"] })}>\r\n                            <Modal.Header closeButton>\r\n                                <Modal.Title>Error</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>{registerFailed[1]}</Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={() => this.setState({ registerFailed: [false, \"\"] })}>\r\n                                    Okay\r\n                                </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\nconst styles = {\r\n    container: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        backgroundSize: 'cover'\r\n    },\r\n    center: {\r\n        marginTop: '100px',\r\n        padding: '10px 30px',\r\n        width: '350px',\r\n        height: '50vh',\r\n        backgroundColor: 'rgba(255, 255, 255, .5)'\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        email: state.user.email\r\n    }\r\n}\r\nexport default connect (mapStateToProps, {login}) (Login)","C:\\Users\\ezray\\OneDrive\\Documents\\JCWM\\Font_End\\ujian-frontend-1504\\src\\action\\index.js",[],"C:\\Users\\ezray\\OneDrive\\Documents\\JCWM\\Font_End\\ujian-frontend-1504\\src\\action\\user_action.js",[],"C:\\Users\\ezray\\OneDrive\\Documents\\JCWM\\Font_End\\ujian-frontend-1504\\src\\components\\navigation.js",["73"],"C:\\Users\\ezray\\OneDrive\\Documents\\JCWM\\Font_End\\ujian-frontend-1504\\src\\components\\products.js",["74"],"import React from 'react'\r\nimport Axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport {\r\n    Button, Card, Modal\r\n} from 'react-bootstrap'\r\n\r\nclass Products extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        Axios.get(\"http://localhost:2000/products\")\r\n        .then((res) => {\r\n            this.setState({data: res.data})\r\n        })\r\n        .catch((err) => console.log((err)))\r\n    }\r\n\r\n    renderModal \r\n    render() {\r\n        return( \r\n            <div style={{padding: \"50px\"}}>\r\n                <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'space-around'}}>\r\n                    {this.state.data.map((item, index) => {\r\n                        return(\r\n                            <div>\r\n                            <Card key={index} style={{ width: '18rem', marginBottom: '20px', display: 'flex', flexDirection: 'column' }}>\r\n                                <Card.Img variant=\"top\" src={item.img} style={{}} />\r\n                                <Card.Body style={styles.cardBody}>\r\n                                    <Card.Title style={{}}>{item.name}</Card.Title>\r\n                                    <Card.Text style={{}}>Rp{item.price.toLocaleString()}</Card.Text>\r\n                                    <Card.Text style={{}}>Stock: {item.stock}</Card.Text>\r\n                                    <div style={{ display: 'flex', justifyContent: 'space-evenly' }}>\r\n                                        <Button variant=\"warning\" >Add to Wish List</Button>\r\n                                        <Button variant=\"primary\"  as={Link} to={`/detail?id=${item.id}`}>Buy Now</Button>\r\n                                    </div>\r\n                                </Card.Body>\r\n                            </Card>\r\n                            \r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst styles = {\r\n    cardBody: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n    }\r\n}\r\n\r\nexport default Products","C:\\Users\\ezray\\OneDrive\\Documents\\JCWM\\Font_End\\ujian-frontend-1504\\src\\pages\\detail_product.js",["75","76"],"import React from 'react'\r\nimport Axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport {\r\n    Image,\r\n    Button,\r\n    Modal,\r\n} from 'react-bootstrap'\r\n\r\nclass ProductDetails extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            data: {},\r\n            image: '',\r\n            selectedSize: null,\r\n            size: null,\r\n            stock: 0,\r\n            total: 0,\r\n            toLogin: false,\r\n            cartErr: false,\r\n            toCart: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        Axios.get(`http://localhost:2000/products${this.props.location.search}`)\r\n            .then((res) => {\r\n                this.setState({ data: res.data[0] })\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n    handleAddToCart = () => {\r\n        const { total, size, data, stock } = this.state\r\n        if (!this.props.id) return this.setState({ toLogin: true })\r\n        if (total === 0 || size === 0) return this.setState({ cartErr: true })\r\n\r\n        let cartData = {\r\n            name: data.name,\r\n            image: data.img,\r\n            price: data.price,\r\n            qty: total,\r\n            stock: data.stock,\r\n            totalPrice: total * data.price\r\n        }\r\n        let tempCart = this.props.cart\r\n        tempCart.push(cartData)\r\n\r\n        Axios.patch(`http://localhost:2000/users/${this.props.id}`, { cart: tempCart })\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                this.setState({ toCart: true })\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        const { data, total, stock, toLogin, toCart, cartErr } = this.state\r\n        if (toLogin) return <Redirect to='/login' />\r\n        if (toCart) return <Redirect to='/cart' />\r\n        console.log(this.props.id)\r\n        console.log(this.props.cart)\r\n        console.log(this)\r\n\r\n        return (\r\n            <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n                <div style={{ marginTop: '50px', padding: '0 20px' }}>\r\n                    <div style={{ display: 'flex', height: '100vh' }}>\r\n                        <div style={styles.img1}>\r\n                            <Image src={data.img} rounded style={{ height: '90%', width: '90%' }} />\r\n                        </div>\r\n                        <div style={styles.detail}>\r\n                            <h6 style={{ fontSize: '16px', fontWeight: '600', letterSpacing: '3px', }}>Brand: {data.brand}</h6>\r\n                            <h1 style={styles.name}>{data.name}</h1>\r\n                            <h6 style={{ ...styles.price, textAlign: \"center\", marginTop: \"7px\" }}>{data.colour}</h6>\r\n                            <br></br>\r\n                            <b style={styles.price}>Rp{data.price ? data.price.toLocaleString() : false}</b>\r\n                            <br></br>\r\n                            <div style={styles.adjust}>\r\n                                <div style={{ width: '40%' }}>\r\n                                    <h5 style={{ lineHeight: '33px', letterSpacing: '2px' }}>Quantity: </h5>\r\n                                    <div style={{ display: 'flex', backgroundColor: '#ffffff', justifyContent: 'space-between', height: '50%' }}>\r\n                                        <Button\r\n                                            disabled={total <= 0 ? true : false}\r\n                                            onClick={() => this.setState({ total: total - 1 })}\r\n                                            style={{\r\n                                                color: 'black', backgroundColor: 'white', border: '1px solid black', flexBasis: \"30%\",\r\n                                                borderRadius: '0px', fontSize: '24px'\r\n                                            }}\r\n                                        ><b>-</b></Button>\r\n                                        <h2>{total}</h2>\r\n                                        <Button\r\n                                            disabled={total >= data.stock ? true : false}\r\n                                            onClick={() => this.setState({ total: total + 1 })}\r\n                                            style={{\r\n                                                color: 'black', backgroundColor: 'white', border: '1px solid black', flexBasis: \"30%\",\r\n                                                borderRadius: '0px', fontSize: '24px'\r\n                                            }}\r\n                                        ><b>+</b></Button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <br></br>\r\n                            <br></br>\r\n                            <div style={{ display: 'flex', alignItems: 'flex-end', justifyContent: 'center' }}>\r\n                                <Button onClick={this.handleAddToCart} style={{ width: '35vw', height: '7vh', backgroundColor: '#0A9A78' }}>Add to Cart</Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <Modal show={cartErr} onHide={() => this.setState({ cartErr: 0 })}>\r\n                    <Modal.Body>Please Select the amount of product you want to buy</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => this.setState({ cartErr: false })}>\r\n                            Close\r\n                            </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    img1: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexBasis: '58%',\r\n        borderRadius: '15px',\r\n    },\r\n    detail: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        flexBasis: '42%',\r\n        padding: '15px',\r\n        borderRadius: '15px',\r\n        paddingTop: '30px'\r\n    },\r\n    total: {\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    adjust: {\r\n        display: 'flex',\r\n        flexDirection: 'column'\r\n        // alignItems: 'center'\r\n    },\r\n    size: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n        margin: \"0 10px 0 10px\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"space-between\"\r\n    },\r\n    name: {\r\n        fontSize: '32px',\r\n        fontWeight: '600',\r\n        letterSpacing: '6px',\r\n        lineHeight: '40px',\r\n        borderTop: \"1px solid  #E3E3E3\",\r\n        borderBottom: \"1px solid  #E3E3E3\",\r\n        padding: '8px 0 8px 0'\r\n    },\r\n    price: {\r\n        fontSize: '24px',\r\n        fontWeight: '600',\r\n        letterSpacing: '3px',\r\n        lineHeight: '33px',\r\n        color: \"#152536\"\r\n    },\r\n    ctgr: {\r\n        fontSize: '14px',\r\n        lineHeight: '20px',\r\n        margin: '9px 0 18px 15px',\r\n        color: '#666666',\r\n        textDecoration: 'underline'\r\n    },\r\n    desc: {\r\n        color: '#666666',\r\n        fontSize: '17px',\r\n        fontWeight: '600',\r\n        lineHeight: '20px',\r\n        textDecoration: 'justify',\r\n        width: '70vw'\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        email: state.user.email,\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(ProductDetails)","C:\\Users\\ezray\\OneDrive\\Documents\\JCWM\\Font_End\\ujian-frontend-1504\\src\\pages\\cart.js",["77","78"],"import React from 'react'\r\nimport Axios from 'axios'\r\nimport { connect } from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\nimport { login } from '../action'\r\nimport {\r\n    Button,\r\n    Form,\r\n    Table,\r\n    Image,\r\n    Modal,\r\n} from 'react-bootstrap'\r\n\r\nconst url = 'http://localhost:2000/'\r\n\r\nclass Cart extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            selectedIndex: null,\r\n            products: [],\r\n            newId: '',\r\n            qty: 0,\r\n            newQty: 0,\r\n            reqPay: false,\r\n            errPay: false,\r\n            toHistory: false, \r\n            reqPass: false,\r\n            errPass: false,\r\n            emptyCart: false\r\n        }\r\n    }\r\n\r\n    // componentDidMount() {\r\n    //     Axios.get(`${url}products`)\r\n    //         .then((res) => this.setState({products: res.data}))\r\n    //         .catch((err) => console.log(err))\r\n    // }\r\n\r\n    handleDelete = (index) => {\r\n        console.log(index)\r\n        let tempCart = this.props.cart\r\n        tempCart.splice(index, 1)\r\n\r\n        Axios.patch(`${url}users/${this.props.id}`, { cart: tempCart })\r\n            .then((res) => {\r\n                console.log(res.data)\r\n\r\n                Axios.get(`${url}users/${this.props.id}`)\r\n                    .then((res) => this.props.login(res.data))\r\n                    .catch((err) => console.log(err))\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n    // handleEdit ada di tabel\r\n\r\n    handleMinus = () => {\r\n        this.setState({ newQty: this.state.newQty - 1 })\r\n    }\r\n\r\n    handlePlus = () => {\r\n        this.setState({newQty: this.state.newQty + 1 })\r\n    }\r\n    \r\n    changeQty = (e) => {\r\n        this.setState({ newQty: e.target.value })\r\n    }\r\n\r\n    handleDone = (index) => {\r\n        let tempProduct = this.props.cart[index]\r\n\r\n        tempProduct.qty = parseInt(this.state.newQty)\r\n        tempProduct.size = this.state.newSize\r\n        tempProduct.totalPrice = this.state.newQty * this.props.cart[index].price\r\n        console.log(tempProduct)\r\n\r\n        let tempCart = this.props.cart\r\n        \r\n        tempCart.splice(index, 1, tempProduct)\r\n        console.log(tempCart)\r\n\r\n        Axios.patch(`http://localhost:2000/users/${this.props.id}`, { cart: tempCart })\r\n            .then((res) => {\r\n                console.log(res.data)\r\n                Axios.get(`http://localhost:2000/users/${this.props.id}`)\r\n                    .then((res) => {\r\n                        this.props.login(res.data)\r\n                        this.setState({ selectedIndex: null })\r\n                    })\r\n                    .catch((err) => console.log(err))\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n    grandTotal = () => {\r\n        let counter = 0\r\n        this.props.cart.map(item => counter += item.totalPrice)\r\n        return counter\r\n    }\r\n\r\n    checkout = () => {\r\n        if (this.props.cart.length === 0) return this.setState({emptyCart: true})\r\n        this.setState({reqPass: true})\r\n    }\r\n\r\n    confPay = () => {\r\n        let bayar = this.refs.payment.value\r\n        let jual = this.grandTotal()\r\n        // nominal bayar&harga jual\r\n        if (bayar < jual) return this.setState({errPay: true})\r\n\r\n        // siapkan data history\r\n        let history = {\r\n            username: this.props.username,\r\n            date: new Date().toLocaleString(),\r\n            total: jual,\r\n            product: this.props.cart\r\n        }\r\n        console.log(history)\r\n\r\n        Axios.post('http://localhost:2000/history', history)\r\n            .then((res) => {\r\n                console.log(res.data)\r\n\r\n                Axios.patch(`http://localhost:2000/users/${this.props.id}`, {cart:[]})\r\n                    .then((res) => {\r\n                        console.log(res.data)\r\n\r\n                        Axios.get(`http://localhost:2000/users/${this.props.id}`)\r\n                            .then((res) => {\r\n                                console.log(res.data)\r\n                                this.props.login(res.data)\r\n                                this.setState({reqPay: false, toHistory: true})\r\n                            })\r\n                            .catch((err) => console.log(err))\r\n                    })\r\n                    .catch((err) => console.log(err))\r\n            })\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n    confPass = () => {\r\n        let pass = this.refs.pass.value\r\n        if(pass !== this.props.pass) return this.setState({errPass: true})\r\n\r\n        this.setState(\r\n            {reqPay: true, reqPass: false})\r\n    }\r\n\r\n    renderTHead = () => {\r\n        return (\r\n            <thead style={{ textAlign: \"center\" }}>\r\n                <tr>\r\n                    <th>Num</th>\r\n                    <th>Name</th>\r\n                    <th>Image</th>\r\n                    <th>Price</th>\r\n                    <th>Quantity</th>\r\n                    <th>Total</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n            </thead>\r\n        )\r\n    }\r\n\r\n    renderTBody = () => {\r\n        return (\r\n            <tbody>\r\n                {this.props.cart.map((item, index) => {\r\n                    if (this.state.selectedIndex === index) {\r\n                        return (\r\n                            <tr key={index}>\r\n                                <td>{index + 1}</td>\r\n                                <td>{item.name}</td>\r\n                                <td style={{ textAlign: \"center\" }}>\r\n                                    <Image style={{ width: 100, height: 100 }} src={item.image} rounded />\r\n                                </td>\r\n                                <td>Rp {item.price.toLocaleString()}</td>\r\n                                <td>\r\n                                    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                        <Button onClick={this.handleMinus} disabled={this.state.newQty <= 0 ? true : false}>\r\n                                            <i className=\"fas fa-minus\"></i>\r\n                                        </Button>\r\n                                        <Form.Control style={{ width: '100px' }} onChange={(e) => this.changeQty(e)} value={this.state.newQty} min={0} />\r\n                                        <Button disabled={this.state.newQty >= parseInt(item.stock) ? true : false} onClick={this.handlePlus}>\r\n                                            <i className=\"fas fa-plus\"></i>\r\n                                        </Button>\r\n                                    </div>\r\n                                </td>\r\n                                <td style={{textAlign: 'center'}}>Rp {(this.state.newQty * item.price).toLocaleString()}</td>\r\n                                <td style={{ textAlign: \"center\" }}>\r\n                                    <Button variant='success' onClick={() => this.handleDone(index)} style={{ marginRight: '15px' }}>Done</Button>\r\n                                    <Button variant='danger' onClick={() => this.setState({ selectedIndex: null })}>Cancel</Button>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    }\r\n                    return (\r\n                        <tr key={index}>\r\n                            <td>{index + 1}</td>\r\n                            <td>{item.name}</td>\r\n                            <td style={{ textAlign: \"center\" }}>\r\n                                <Image style={{ width: 100, height: 100 }} src={item.image} rounded />\r\n                            </td>\r\n                            <td style={{ textAlign: \"center\" }}>{item.size}</td>\r\n                            <td style={{ textAlign: \"center\" }}>Rp {item.price.toLocaleString()}</td>\r\n                            <td style={{ textAlign: \"center\" }}>{item.qty}</td>\r\n                            <td style={{ textAlign: \"center\" }}>Rp {item.totalPrice.toLocaleString()}</td>\r\n                            <td style={{ textAlign: \"center\" }}>\r\n                                <Button variant='warning' onClick={() => this.setState({ selectedIndex: index, newQty: item.qty, newSize: item.size, newId: item.id })} style={{ marginRight: '15px' }}>Edit</Button>\r\n                                <Button variant='danger' onClick={() => this.handleDelete(index)}>Delete</Button>\r\n                            </td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </tbody>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {reqPay, errPay, reqPass, errPass, emptyCart, toHistory} = this.state\r\n        // if (toHistory) return <Redirect to='/history' />\r\n        console.log(this.props.cart)\r\n        return (\r\n            <div>\r\n                <h1>Cart</h1>\r\n                <Table>\r\n                {this.renderTHead()}\r\n                {this.renderTBody()}\r\n                </Table>\r\n                <h1>Rp {this.grandTotal().toLocaleString()} </h1>\r\n                <div style={{display: 'flex', alignItems: 'center'}}>\r\n                    <Button onClick={() => this.setState({reqPass: true})}  variant=\"success\">Checkout</Button>\r\n                </div>\r\n                <Modal show={reqPass} onHide={() => this.setState({ reqPass: false })}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Confirmation</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        <Form.Control ref=\"pass\" placeholder=\"Input password to continue your payment\"/>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => this.setState({ reqPass: false })}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.confPass} >\r\n                            Confirm\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Modal show={errPass} onHide={() => this.setState({ errPass: false })}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Wrong Password</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => this.setState({ errPass: false })}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Modal show={reqPay} onHide={() => this.setState({ reqPay: false })}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Billing</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>\r\n                        Total = Rp {this.grandTotal().toLocaleString()}\r\n                        <br></br>\r\n                        <Form.Control ref=\"payment\" placeholder=\"Please input the amount of money you need to pay\"/>\r\n                    </Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => this.setState({ reqPay: false })}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.confPay} >\r\n                            Confirm\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Modal show={errPay} onHide={() => this.setState({ errPay: false })}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Error</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>Your bill is Rp {this.grandTotal().toLocaleString()}</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => this.setState({ errPay: false })}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n                <Modal show={emptyCart} onHide={() => this.setState({ emptyCart: false })}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Cart is empty</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={() => this.setState({ emptyCart: false })}>\r\n                            Close\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cart: state.user.cart,\r\n        id: state.user.id,\r\n        email: state.user.email,\r\n        pass: state.user.password\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { login })(Cart)","C:\\Users\\ezray\\OneDrive\\Documents\\JCWM\\Font_End\\ujian-frontend-1504\\src\\action\\history_action.js",[],"C:\\Users\\ezray\\OneDrive\\Documents\\JCWM\\Font_End\\ujian-frontend-1504\\src\\reducer\\history_reducer.js",[],"C:\\Users\\ezray\\OneDrive\\Documents\\JCWM\\Font_End\\ujian-frontend-1504\\src\\pages\\history.js",[],{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":13,"column":19,"nodeType":"85","messageId":"86","endLine":13,"endColumn":23},{"ruleId":"83","severity":1,"message":"87","line":30,"column":20,"nodeType":"85","messageId":"86","endLine":30,"endColumn":31},{"ruleId":"83","severity":1,"message":"88","line":30,"column":33,"nodeType":"85","messageId":"86","endLine":30,"endColumn":43},{"ruleId":"83","severity":1,"message":"89","line":77,"column":30,"nodeType":"85","messageId":"86","endLine":77,"endColumn":38},{"ruleId":"90","severity":1,"message":"91","line":38,"column":37,"nodeType":"92","endLine":38,"endColumn":52},{"ruleId":"83","severity":1,"message":"93","line":5,"column":19,"nodeType":"85","messageId":"86","endLine":5,"endColumn":24},{"ruleId":"83","severity":1,"message":"94","line":36,"column":36,"nodeType":"85","messageId":"86","endLine":36,"endColumn":41},{"ruleId":"83","severity":1,"message":"94","line":60,"column":30,"nodeType":"85","messageId":"86","endLine":60,"endColumn":35},{"ruleId":"83","severity":1,"message":"95","line":4,"column":9,"nodeType":"85","messageId":"86","endLine":4,"endColumn":17},{"ruleId":"83","severity":1,"message":"96","line":222,"column":61,"nodeType":"85","messageId":"86","endLine":222,"endColumn":70},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'emailFailed' is assigned a value but never used.","'passFailed' is assigned a value but never used.","'eyePassB' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component item must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'Modal' is defined but never used.","'stock' is assigned a value but never used.","'Redirect' is defined but never used.","'toHistory' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]